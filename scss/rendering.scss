@use "vector.scss" as v;
@use "native.scss" as n;
@use "logic.scss" as l;
@use "color.scss" as c;
@use "layout.scss";
@use "properties.scss";

//
.root {
    & { //
        @include v.vec3("camera-origin", 0, 0, 0);
        @include v.vec3("camera-dir", 0, 0.01, 1);
        @include v.vec3("camera-up", 0, -1, 0);
        @include v.vec3("camera-right", 1, 0, 0);
    }

    & { //
        --sphere-radius: 1;
        @include v.vec3("sphere-center", 0, 0.1, 3);
        @include v.vec3("plane-center", 0, -2, 0);
        @include v.vec3("plane-normal", 0, 1, 0);
    }
}

//
.root {
    .pixel {
        @include v.generate-ray(
            "camera-origin", "camera-dir", "camera-up", "camera-right",
            "ray-origin", "ray-dir"
        );

        //
        --sphere-t: #{v.sphere-intersection("sphere-center", "sphere-radius", "ray-origin", "ray-dir")};
        --plane-t : #{v.plane-intersection("plane-center", "plane-normal", "ray-origin", "ray-dir")};

        //
        --t: min(var(--sphere-t, #{v.$inf}), var(--plane-t, #{v.$inf}));
        --is-plane : #{l.eq(var(--t, #{v.$inf}), var(--plane-t , #{v.$inf}))};
        --is-sphere: #{l.eq(var(--t, #{v.$inf}), var(--sphere-t, #{v.$inf}))};

        //
        @include v.vec3("computed-origin",
            calc(var(--ray-origin-x) + var(--t) * var(--ray-dir-x)),
            calc(var(--ray-origin-y) + var(--t) * var(--ray-dir-y)),
            calc(var(--ray-origin-z) + var(--t) * var(--ray-dir-z))
        );

        //
        --default-color: #aacffe;
        --sphere-color: #ffccaa;
        --plane-color: #{c.checkerboard("computed-origin")};

        //
        $valid-distance: l.land(
            l.lt(var(--t, #{v.$inf}), #{v.$inf}),
            l.ge(var(--t, #{v.$inf}), 0)
        );

        //
        $dependent: #{l.col-mix(
            var(--is-sphere, 0),
            var(--sphere-color, #111),
            var(--plane-color, #fff)
        )};

        //
        background-color: #{l.col-mix( $valid-distance,
            $dependent,
            var(--default-color)
        )};
    }
}
