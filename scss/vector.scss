@use "./logic.scss" as l;

//
$inf: 10000;

//
@mixin vec3($name, $x: 0, $y: 0, $z: 0) {
    --#{$name}-x: #{$x};
    --#{$name}-y: #{$y};
    --#{$name}-z: #{$z};
}

@mixin flat3($name, $s: 0) {
    --#{$name}-x: #{$s};
    --#{$name}-y: #{$s};
    --#{$name}-z: #{$s};
}

@mixin cross($out, $a, $b) {
    @include vec3(
        $out,
        calc(var(--#{$a}-y, 0) * var(--#{$b}-z, 0) - var(--#{$b}-y, 0) * var(--#{$a}-z, 0)),
        calc(var(--#{$a}-z, 0) * var(--#{$b}-x, 0) - var(--#{$b}-z, 0) * var(--#{$a}-x, 0)),
        calc(var(--#{$a}-x, 0) * var(--#{$b}-y, 0) - var(--#{$b}-x, 0) * var(--#{$a}-y, 0))
    );
}

@function dot($a, $b) {
    @return calc(
        (var(--#{$a}-x, 0) * var(--#{$b}-x, 0)) + (var(--#{$a}-y, 0) * var(--#{$b}-y, 0)) +
            (var(--#{$a}-z, 0) * var(--#{$b}-z, 0))
    );
}

@mixin minus3($out, $a, $b) {
    @include vec3(
        $out,
        calc(var(--#{$a}-x, 0) - var(--#{$b}-x, 0)),
        calc(var(--#{$a}-y, 0) - var(--#{$b}-y, 0)),
        calc(var(--#{$a}-z, 0) - var(--#{$b}-z, 0))
    );
}

//
@function length($a) {
    @return sqrt(max(#{dot($a, $a)}, 0));
}

//
@mixin normalize($out, $v, $l) {
    @include vec3(
        $out,
        clamp(-1, calc(var(--#{$v}-x, 0) / #{$l}), 1),
        clamp(-1, calc(var(--#{$v}-y, 0) / #{$l}), 1),
        clamp(-1, calc(var(--#{$v}-z, 0) / #{$l}), 1)
    );
}

@mixin reflect($out, $v, $n) {
    @include vec3(
        $out,
        calc(var(--#{$v}-x, 0) - 2 * dot($v, $n) * var(--#{$n}-x, 0)),
        calc(var(--#{$v}-y, 0) - 2 * dot($v, $n) * var(--#{$n}-y, 0)),
        calc(var(--#{$v}-z, 0) - 2 * dot($v, $n) * var(--#{$n}-z, 0))
    );
}

@mixin copy-vec3($out, $v) {
    @include vec3(
        $out,
        var(--#{$v}-x, 0),
        var(--#{$v}-y, 0),
        var(--#{$v}-z, 0)
    );
}

@mixin compute-intersection-point($out, $origin, $dir, $t) {
    @include vec3(
        $out,
        calc(var(--#{$origin}-x, 0) + var(--#{$dir}-x, 0) * var(--#{$t}, 0)),
        calc(var(--#{$origin}-y, 0) + var(--#{$dir}-y, 0) * var(--#{$t}, 0)),
        calc(var(--#{$origin}-z, 0) + var(--#{$dir}-z, 0) * var(--#{$t}, 0))
    );
}

@mixin mix-vec3($out, $i, $a, $b) {
    @include vec3(
        $out,
        l.mix(var(--#{$i}, 0), var(--#{$a}-x, 0), var(--#{$b}-x, 0)),
        l.mix(var(--#{$i}, 0), var(--#{$a}-y, 0), var(--#{$b}-y, 0)),
        l.mix(var(--#{$i}, 0), var(--#{$a}-z, 0), var(--#{$b}-z, 0))
    );
}
