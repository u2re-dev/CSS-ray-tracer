@use "./logic.scss" as l;

//
$inf: 10000;

//
@mixin vec3($name, $x: 0, $y: 0, $z: 0) {
    --#{$name}-x: #{$x};
    --#{$name}-y: #{$y};
    --#{$name}-z: #{$z};
}

@mixin flat3($name, $s: 0) {
    --#{$name}-x: #{$s};
    --#{$name}-y: #{$s};
    --#{$name}-z: #{$s};
}

@mixin cross($out, $a, $b) {
    @include vec3($out,
        calc(var(--#{$a}-y, 0) * var(--#{$b}-z, 0) - var(--#{$b}-y, 0) * var(--#{$a}-z, 0)),
        calc(var(--#{$a}-z, 0) * var(--#{$b}-x, 0) - var(--#{$b}-z, 0) * var(--#{$a}-x, 0)),
        calc(var(--#{$a}-x, 0) * var(--#{$b}-y, 0) - var(--#{$b}-x, 0) * var(--#{$a}-y, 0))
    );
}

@function dot($a, $b) {
    @return calc(
        (var(--#{$a}-x, 0) * var(--#{$b}-x, 0)) +
        (var(--#{$a}-y, 0) * var(--#{$b}-y, 0)) +
        (var(--#{$a}-z, 0) * var(--#{$b}-z, 0))
    );
}

@mixin minus3($out, $a, $b) {
    @include vec3($out,
        calc(var(--#{$a}-x, 0) - var(--#{$b}-x, 0)),
        calc(var(--#{$a}-y, 0) - var(--#{$b}-y, 0)),
        calc(var(--#{$a}-z, 0) - var(--#{$b}-z, 0))
    );
}

//
@function length($a) {
    @return #{'sqrt'}(#{dot($a, $a)});
}

//
@mixin normalize($out, $v, $l) {
    @include vec3($out,
        calc(var(--#{$v}-x, 0) / #{$l}),
        calc(var(--#{$v}-y, 0) / #{$l}),
        calc(var(--#{$v}-z, 0) / #{$l})
    );
}
