//
$inf: 10000;

//
@mixin declare-vec3-property($name) {
    @property --#{$name}-x {
        inherits: true;
        syntax: "<number>";
        initial-value: 0;
    }

    @property --#{$name}-y {
        inherits: true;
        syntax: "<number>";
        initial-value: 0;
    }

    @property --#{$name}-z {
        inherits: true;
        syntax: "<number>";
        initial-value: 0;
    }
}

//
@property --screen-x {
    inherits: true;
    syntax: "<number>";
    initial-value: 0;
}

@property --screen-y {
    inherits: true;
    syntax: "<number>";
    initial-value: 0;
}

//
@property --dx {
    inherits: true;
    syntax: "<number>";
    initial-value: 0;
}

@property --dy {
    inherits: true;
    syntax: "<number>";
    initial-value: 0;
}

//
@property --x {
    inherits: true;
    syntax: "<integer>";
    initial-value: 0;
}

@property --y {
    inherits: true;
    syntax: "<integer>";
    initial-value: 0;
}

@property --w {
    inherits: true;
    syntax: "<integer>";
    initial-value: 1;
}

@property --h {
    inherits: true;
    syntax: "<integer>";
    initial-value: 1;
}

//
@for $i from 0 through 3 {
    @property --t-#{$i} {
        inherits: true;
        syntax: "<number>";
        initial-value: #{$inf};
    }

    @property --sphere-t-#{$i} {
        inherits: true;
        syntax: "<number>";
        initial-value: #{$inf};
    }

    @property --plane-t-#{$i} {
        inherits: true;
        syntax: "<number>";
        initial-value: #{$inf};
    }

    @property --is-plane-#{$i} {
        inherits: true;
        syntax: "<number>";
        initial-value: 0;
    }

    @property --is-sphere-#{$i} {
        inherits: true;
        syntax: "<number>";
        initial-value: 0;
    }

    @property --color-#{$i} {
        inherits: true;
        syntax: "<color>";
        initial-value: transparent;
    }

    @property --it-color-#{$i} {
        inherits: true;
        syntax: "<color>";
        initial-value: transparent;
    }

    @property --plane-color-#{$i} {
        inherits: true;
        syntax: "<color>";
        initial-value: transparent;
    }

    @property --sphere-color-#{$i} {
        inherits: true;
        syntax: "<color>";
        initial-value: transparent;
    }

    @property --shaded-color-#{$i} {
        inherits: true;
        syntax: "<color>";
        initial-value: transparent;
    }

    @property --surface-color-#{$i} {
        inherits: true;
        syntax: "<color>";
        initial-value: transparent;
    }

    @property --fresnel-#{$i} {
        inherits: true;
        syntax: "<number>";
        initial-value: 0;
    }

    @property --mix-factor-#{$i} {
        inherits: true;
        syntax: "<number>";
        initial-value: 0;
    }

    //
    @include declare-vec3-property("ray-origin-#{$i}");
    @include declare-vec3-property("ray-dir-#{$i}");
    @include declare-vec3-property("sphere-normal-#{$i}");
    @include declare-vec3-property("computed-origin-#{$i}");
    @include declare-vec3-property("mixed-normal-#{$i}");
}


@property --sphere-radius {
    inherits: true;
    syntax: "<number>";
    initial-value: 0;
}

@property --sphere-center-length {
    inherits: true;
    syntax: "<number>";
    initial-value: 0;
}

//
@include declare-vec3-property("camera-origin");
@include declare-vec3-property("camera-dir");
@include declare-vec3-property("camera-up");
@include declare-vec3-property("camera-right");
@include declare-vec3-property("sphere-center");
@include declare-vec3-property("plane-center");
@include declare-vec3-property("plane-normal");
