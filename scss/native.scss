@use "vector.scss" as v;
@use "intersection.scss" as i;
@use "color.scss" as c;

// low-level
@#{'function'} --sphere-intersection(--center-x type(<number>), --center-y type(<number>), --center-z type(<number>),  --radius type(<number>), --origin-x type(<number>), --origin-y type(<number>), --origin-z type(<number>), --dir-x type(<number>), --dir-y type(<number>), --dir-z type(<number>)) returns <number>
{
    @include i.sphere-intersection-logic('center', 'radius', 'origin', 'dir');
}

// low-level
@#{'function'} --plane-intersection(--center-x type(<number>), --center-y type(<number>), --center-z type(<number>),  --normal-x type(<number>), --normal-y type(<number>), --normal-z type(<number>), --origin-x type(<number>), --origin-y type(<number>), --origin-z type(<number>), --dir-x type(<number>), --dir-y type(<number>), --dir-z type(<number>)) returns <number>
{
    @include i.plane-intersection-logic('center', 'normal', 'origin', 'dir');
}

// low-level
@#{'function'} --light-shading(--origin-x type(<number>), --origin-y type(<number>), --origin-z type(<number>), --normal-x type(<number>), --normal-y type(<number>), --normal-z type(<number>), --light-pos-x type(<number>), --light-pos-y type(<number>), --light-pos-z type(<number>), --color type(<color>)) returns <color>
{
    @include c.light-shading-logic('origin', 'normal', 'light-pos', var(--color, #111));
}
