@use "./vector.scss" as v;
@use "./logic.scss" as l;

//
@mixin generate-ray($camera-origin, $camera-view-dir, $camera-up, $camera-right,   $out-ray-origin, $out-ray-dir) {
    --dx: calc(var(--x, 0) / var(--w, 0));
    --dy: calc(var(--y, 0) / var(--h, 0));

    //
    --screen-x: calc(var(--dx, 0) * 2 - 1);
    --screen-y: calc(var(--dy, 0) * 2 - 1);

    //
    @include v.vec3("screen-offset",
        calc(var(--screen-x, 0) * var(--#{$camera-right}-x, 0) + var(--screen-y, 0) * var(--#{$camera-up}-x, 0)),
        calc(var(--screen-x, 0) * var(--#{$camera-right}-y, 0) + var(--screen-y, 0) * var(--#{$camera-up}-y, 0)),
        calc(var(--screen-x, 0) * var(--#{$camera-right}-z, 0) + var(--screen-y, 0) * var(--#{$camera-up}-z, 0))
    );

    //
    @include v.vec3($out-ray-dir + "-tmp",
        calc(var(--#{$camera-view-dir}-x, 0) + var(--#{$camera-origin}-x, 0) + var(--screen-offset-x, 0)),
        calc(var(--#{$camera-view-dir}-y, 0) + var(--#{$camera-origin}-y, 0) + var(--screen-offset-y, 0)),
        calc(var(--#{$camera-view-dir}-z, 0) + var(--#{$camera-origin}-z, 0) + var(--screen-offset-z, 0))
    );

    //
    @include v.normalize($out-ray-dir, $out-ray-dir + "-tmp", v.length($out-ray-dir + "-tmp"));
    @include v.vec3($out-ray-origin,
        var(--#{$camera-origin}-x, 0),
        var(--#{$camera-origin}-y, 0),
        var(--#{$camera-origin}-z, 0)
    );
}
